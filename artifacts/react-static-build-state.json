{
  "prefetchRate": 5,
  "maxThreads": null,
  "disableRoutePrefixing": false,
  "outputFileRate": 100,
  "extensions": [
    ".js",
    ".jsx"
  ],
  "minLoadTime": 200,
  "disablePreload": false,
  "disableRuntime": false,
  "preloadPollInterval": 300,
  "productionSourceMaps": false,
  "entry": "index.js",
  "devServer": {
    "host": "localhost",
    "port": 3000,
    "disableHostCheck": true
  },
  "siteRoot": "http://otmdispatch.com",
  "plugins": [
    [
      "/mnt/d/workspace/work/otm-dispatch/static-site/node_modules/react-static-plugin-source-filesystem/node.api.js",
      {
        "location": "/mnt/d/workspace/work/otm-dispatch/static-site/src/pages"
      }
    ],
    "/mnt/d/workspace/work/otm-dispatch/static-site/node_modules/react-static-plugin-reach-router/browser.api.js",
    "/mnt/d/workspace/work/otm-dispatch/static-site/node_modules/react-static-plugin-sitemap/dist/node.api.js",
    "/mnt/d/workspace/work/otm-dispatch/static-site"
  ],
  "paths": {
    "ROOT": "/mnt/d/workspace/work/otm-dispatch/static-site",
    "SRC": "/mnt/d/workspace/work/otm-dispatch/static-site/src",
    "DIST": "/mnt/d/workspace/work/otm-dispatch/static-site/dist",
    "ASSETS": "/mnt/d/workspace/work/otm-dispatch/static-site/dist",
    "PLUGINS": "/mnt/d/workspace/work/otm-dispatch/static-site/plugins",
    "TEMP": "/mnt/d/workspace/work/otm-dispatch/static-site/tmp",
    "ARTIFACTS": "/mnt/d/workspace/work/otm-dispatch/static-site/artifacts",
    "PUBLIC": "/mnt/d/workspace/work/otm-dispatch/static-site/public",
    "NODE_MODULES": "/mnt/d/workspace/work/otm-dispatch/static-site/node_modules",
    "EXCLUDE_MODULES": "/mnt/d/workspace/work/otm-dispatch/static-site/node_modules",
    "PACKAGE": "/mnt/d/workspace/work/otm-dispatch/static-site/package.json",
    "HTML_TEMPLATE": "/mnt/d/workspace/work/otm-dispatch/static-site/dist/index.html",
    "STATIC_DATA": "/mnt/d/workspace/work/otm-dispatch/static-site/dist/staticData"
  },
  "basePath": "",
  "publicPath": "http://otmdispatch.com/",
  "assetsPath": "",
  "extractCssChunks": false,
  "inlineCss": false,
  "babelExcludes": [],
  "terser": {
    "terserOptions": {
      "mangle": {},
      "parse": {},
      "compress": {},
      "output": {}
    }
  }
}